# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
 push:
   branches: [ "master" ]
 pull_request:
   branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    # strategy:
    #   # You can use PyPy versions in python-version.
    #   # For example, pypy2.7 and pypy3.9
    #   matrix:
    #     python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        # python-version: ${{ matrix.python-version }}
        # cache: 'pip'
    - name: Display Python version
        run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
    - name: Archive artifacts
      uses: actions/upload-artifact@v1
      with:
        name: scdata-pkg
        path: dist
    - name: Publish package
      if: github.repository == 'fablabbcn/smartcitizen-data' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: oscgonfer
        password: ${{ secrets.PYPI_API_TOKEN }}